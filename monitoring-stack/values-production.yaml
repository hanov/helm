# Production values for monitoring-stack
# Override default values for production environment

# Prometheus configuration
prometheus:
  replicas: 2
  retention: 30d
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "8Gi"
      cpu: "4000m"
  persistence:
    enabled: true
    storageClass: "fast-ssd"  # Use your storage class
    size: 100Gi

# Alertmanager configuration
alertmanager:
  replicas: 3
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  persistence:
    enabled: true
    storageClass: "fast-ssd"
    size: 20Gi
  config:
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 12h
      receiver: 'slack-critical'
      routes:
        - match:
            severity: critical
          receiver: 'slack-critical'
        - match:
            severity: warning
          receiver: 'slack-warnings'
    receivers:
      - name: 'slack-critical'
        slack_configs:
          - api_url: 'https://hooks.slack.com/services/YOUR/WEBHOOK/URL'
            channel: '#alerts-critical'
            title: 'Critical Alert'
      - name: 'slack-warnings'
        slack_configs:
          - api_url: 'https://hooks.slack.com/services/YOUR/WEBHOOK/URL'
            channel: '#alerts-warnings'
            title: 'Warning Alert'

# Grafana configuration
grafana:
  replicas: 2
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  persistence:
    enabled: true
    storageClass: "fast-ssd"
    size: 20Gi
  service:
    type: LoadBalancer  # Or use ClusterIP with Ingress
  adminPassword: "CHANGE_THIS_PASSWORD"  # Use a secret in production!

# Node Exporter - enable for node metrics
nodeExporter:
  enabled: true

# Kube State Metrics - enable for Kubernetes metrics
kubeStateMetrics:
  enabled: true
