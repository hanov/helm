{{- if .Values.nodeExporter.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: {{ .Values.global.namespace }}
  labels:
    app: node-exporter
    component: monitoring
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      hostNetwork: true
      hostPID: true
      containers:
      - name: node-exporter
        image: {{ .Values.nodeExporter.image.repository }}:{{ .Values.nodeExporter.image.tag }}
        imagePullPolicy: {{ .Values.nodeExporter.image.pullPolicy }}
        args:
          - '--path.procfs=/host/proc'
          - '--path.sysfs=/host/sys'
          - '--path.rootfs=/host/root'
          - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
        ports:
        - containerPort: {{ .Values.nodeExporter.service.port }}
          name: metrics
        resources:
          {{- toYaml .Values.nodeExporter.resources | nindent 10 }}
        volumeMounts:
        - name: proc
          mountPath: /host/proc
          readOnly: true
        - name: sys
          mountPath: /host/sys
          readOnly: true
        - name: root
          mountPath: /host/root
          readOnly: true
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      - name: root
        hostPath:
          path: /
---
apiVersion: v1
kind: Service
metadata:
  name: node-exporter
  namespace: {{ .Values.global.namespace }}
  labels:
    app: node-exporter
    component: monitoring
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: {{ .Values.nodeExporter.service.port }}
    targetPort: {{ .Values.nodeExporter.service.port }}
    protocol: TCP
    name: metrics
  selector:
    app: node-exporter
{{- end }}
